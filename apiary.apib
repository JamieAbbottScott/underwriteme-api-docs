FORMAT: 1A

# UnderwriteMe API

## Overview
**UnderwriteMe API** is a set of REST endpoints which allows you to interact with underwriting workflow. Workflow consist of following components:

  * **Authentication** - Receiving access token after giving valid authentication details.
  * **Application** - Creating Application which contains basic information about Customers and Products they apply for.
  * **Enquiry** - Filling in Customer Enquiry.
  * **Quote** - Retrieving Decisions and Quotes for Products.
  * **Basket** - Choosing Products for Activation.
  * **Activation** - Retrieving state of activated Products.

# Group Authentication

## Login and retrieve access token [/auth]
Authentication related resources of the **UnderwriteMe API**.

### Login and retrive access token [POST]
+ Request Valid Authentication. (application/json)

            {
                "username":"username",
                "password":"password"
            }
            
+ Response 200

            {
                "access_token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VybmFtZSIsImV4cCI6MTQyMjU0MDAzMH0.oyMYL7t57jhBvw-A3vghOAXl6cixpaTsZW69wz3p5M8"
            }

# Group Application
Application related resources of the **UnderwriteMe API**.

## Create new Application [/application]
Creating new Application based on sent Customers and Products JSON data.

- ***customers*** `array` *(required)* - List of Customers (represented as `object`) for the Application.
    - ***id*** `string` *(required)* - Temporary ID of the Customer to be used when referencing to ***livesAsssured*** for the Product and to identify them if any validation errors occur.
    - ***name*** `string` *(required)* - Customer name.
    - ***surname*** `string` *(required)* - Customer surname.
    - ***title*** `string` *(required)* - Customer title. Allowed values: `MR`, `MRS`, `MISS`, `MS`, `DR`, `REV`.
    - ***gender*** `string` *(required)* - Customer gender. Allowed values: `FEMALE`, `MALE`.
    - ***dateOfBirth*** `string` *(required)* - Customer date of birth. ISO date format (`YYYY-MM-DD`) required. Example: `1980-01-01`.
    - ***smoker*** `boolean` *(required)* - `true` if Customer smokes, `false` otherwise.
    - ***contactDetails*** `object` *(optional)* - Customer contact details. Not required but cannot be empty.
        - ***telephoneNumber*** `string` *(required)* - Customer main telephone number.
        - ***alternativeTelephoneNumber*** `string` *(optional)* - Customer alternative telephone number.
        - ***address*** `object` *(optional)* - Customer address details. Not required but cannot be empty.
            - ***line1*** `string` *(required)* - Address first line.
            - ***line2*** `string` *(optional)* - Address second line.
            - ***town*** `string` *(required)* - Address town.
            - ***county*** `string` *(required)* - Address county.
            - ***postcode*** `string` *(required)* - Address postcode.
- ***products*** `array` *(required)* - List of Products (represented as `object`) for the Application.
    - ***id*** `string` *(required)* - Temporary ID of the Product to identify it if any validation errors occur.
    - ***type*** `string` *(required)* - Product type. Allowed values: `TERM`, `CRITICAL_ILLNESS`, `CRITICAL_ILLNESS_WITH_LIFE_COVER`, `FAMILY_INCOME_BENEFIT`, `INCOME_PROTECTION`, `WHOLE_OF_LIFE`.
    - ***coverAmount*** `number` *(required/optional)* - Product cover amount. Required if ***premium*** not specified. Does not allow decimals.
    - ***premium*** `number` *(required/optional)* - Product premium. Required if ***coverAmount*** not specified. Allows decimals.
    - ***coverPeriod*** `number` *(required/optional)* - Product cover period in years. Required if ***coverUntilAge*** not specified. Does not allow decimals.
    - ***coverUntilAge*** `number` *(required/optional)* - Product cover until age in years. Required if ***coverPeriod*** not specified.  Does not allow decimals.
    - ***coverBasis*** `string` *(required/optional)* - Product cover basis. Optional if ***type*** is `WHOLE_OF_LIFE`. Allowed values: `DECREASING`, `LEVEL`, `INCREASING`.
    - ***deferredPeriodInWeeks*** `number` *(required/optional)* - Product deferred period in weeks. Required if ***type*** is `INCOME_PROTECTION`. Allowed values: `0`, `4`, `8`, `13`, `26`, `52`.
    - ***livesAssured*** `array` *(required)* - List of Customers (represented as `object`) for whom the Product is.
        - ***id*** `string` *(required)* - Temporary ID of the Customer. Object with the same value must be available in ***customers*** list.
        - ***waiverOfPremium*** `boolean` *(optional)* - Flag to mark waiver of premium for Customer.
        - ***totalPermanentDisability*** `boolean` *(optional)* - Flag to mark total permanent disability for Customer.
- ***policyStartDate*** `string` *(optional)* - Policy start date. ISO date format (`YYYY-MM-DD`) required. Example: `2015-01-01`.

### Create new Application [POST]
+ Request Valid Application. (application/json)

            {
                "customers":[
                    {
                        "id":"cus-001",
                        "name":"John",
                        "surname":"Doe",
                        "title":"MR",
                        "gender":"MALE",
                        "dateOfBirth":"1980-01-01",
                        "smoker":false,
                        "email":"john.doe@domain.com"
                    }
                ],
                "products":[
                    {
                        "id":"pro-001",
                        "type":"WHOLE_OF_LIFE",
                        "coverAmount":100000,
                        "livesAssured":[
                            {
                                "id":"cus-001"
                            }
                        ]
                    }
                ]
            }

+ Response 201 (application/json)

            {
                "id":"UME00000000",
                "customers":[
                    {
                        "id":"1001",
                        "name":"John",
                        "surname":"Doe",
                        "title":"MR",
                        "gender":"MALE",
                        "dateOfBirth":"1980-01-01",
                        "smoker":false,
                        "email":"john.doe@domain.com"
                    }
                ],
                "products":[
                    {
                        "id":"0001-0001",
                        "type":"WHOLE_OF_LIFE",
                        "coverAmount":100000,
                        "livesAssured":[
                            {
                                "id":"1001"
                            }
                        ]
                    }
                ]
            }

+ Request Customer name cannot contain numbers. (application/json)

            {
                "customers":[
                    {
                        "id":"cus-001",
                        "name":"J0hn",
                        "surname":"Doe",
                        "title":"MR",
                        "gender":"MALE",
                        "dateOfBirth":"1980-01-01",
                        "smoker":false,
                        "email":"john.doe@domain.com"
                    }
                ],
                "products":[
                    {
                        "id":"pro-001",
                        "type":"WHOLE_OF_LIFE",
                        "coverAmount":100000,
                        "livesAssured":[
                            {
                                "id":"cus-001"
                            }
                        ]
                    }
                ]
            }

+ Response 400 (application/json)

            {
                "customers":[
                    {
                        "id":"cus-001",
                        "name":{
                            "errorMessage":"Value must be a valid name. Must start with a letter. Can contain letters (A to Z), hyphens (-), apostrophes (') and spaces."
                        }
                    }
                ]
            }

+ Request Invalid cover amount for Product. (application/json)

            {
                "customers":[
                    {
                        "id":"cus-001",
                        "name":"John",
                        "surname":"Doe",
                        "title":"MR",
                        "gender":"MALE",
                        "dateOfBirth":"1980-01-01",
                        "smoker":false,
                        "email":"john.doe@domain.com"
                    }
                ],
                "products":[
                    {
                        "id":"pro-001",
                        "type":"WHOLE_OF_LIFE",
                        "coverAmount":1000,
                        "livesAssured":[
                            {
                                "id":"cus-001"
                            }
                        ]
                    }
                ]
            }

+ Response 400 (application/json)

            {
                "products":[
                    {
                        "id":"pro-001",
                        "coverAmount":{
                            "errorMessage":"Minimum cover amount is Â£10000"
                        }
                    }
                ]
            }

## Retrieve existing Application [/application/{id}]
Retrieving existing Application identified by unique ID.

+ Parameters

    + id (required, string, `UME00000000`) ... Unique ID of existing Application.

### Retrieve existing Application [GET]
+ Response 200 (application/json)

    + Body

            {
                "id":"UME00000000",
                "customers":[
                    {
                        "id":"101",
                        "name":"John",
                        "surname":"Doe",
                        "title":"MR",
                        "gender":"MALE",
                        "dateOfBirth":"1980-01-01",
                        "smoker":false,
                        "email":"john.doe@domain.com"
                    }
                ],
                "products":[
                    {
                        "id":"0001-0001",
                        "type":"WHOLE_OF_LIFE",
                        "coverAmount":100000,
                        "livesAssured":[
                            {
                              "id":"1001"
                            }
                        ]
                    }
                ]
            }
